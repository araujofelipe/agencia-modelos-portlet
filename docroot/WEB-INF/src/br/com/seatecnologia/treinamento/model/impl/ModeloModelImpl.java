/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * The contents of this file are subject to the terms of the Liferay Enterprise
 * Subscription License ("License"). You may not use this file except in
 * compliance with the License. You can obtain a copy of the License by
 * contacting Liferay, Inc. See the License for the specific language governing
 * permissions and limitations under the License, including but not limited to
 * distribution rights of the Software.
 *
 *
 *
 */

package br.com.seatecnologia.treinamento.model.impl;

import br.com.seatecnologia.treinamento.model.Modelo;
import br.com.seatecnologia.treinamento.model.ModeloModel;
import br.com.seatecnologia.treinamento.model.ModeloSoap;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the Modelo service. Represents a row in the &quot;agenciamodelos_Modelo&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link br.com.seatecnologia.treinamento.model.ModeloModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link ModeloImpl}.
 * </p>
 *
 * @author felipearaujo
 * @see ModeloImpl
 * @see br.com.seatecnologia.treinamento.model.Modelo
 * @see br.com.seatecnologia.treinamento.model.ModeloModel
 * @generated
 */
@JSON(strict = true)
public class ModeloModelImpl extends BaseModelImpl<Modelo>
	implements ModeloModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a modelo model instance should use the {@link br.com.seatecnologia.treinamento.model.Modelo} interface instead.
	 */
	public static final String TABLE_NAME = "agenciamodelos_Modelo";
	public static final Object[][] TABLE_COLUMNS = {
			{ "modeloId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "userName", Types.VARCHAR },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "nome", Types.VARCHAR },
			{ "idade", Types.INTEGER },
			{ "altura", Types.DOUBLE },
			{ "peso", Types.DOUBLE },
			{ "etinia", Types.INTEGER }
		};
	public static final String TABLE_SQL_CREATE = "create table agenciamodelos_Modelo (modeloId LONG not null primary key,groupId LONG,companyId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,nome VARCHAR(75) null,idade INTEGER,altura DOUBLE,peso DOUBLE,etinia INTEGER)";
	public static final String TABLE_SQL_DROP = "drop table agenciamodelos_Modelo";
	public static final String ORDER_BY_JPQL = " ORDER BY modelo.nome ASC";
	public static final String ORDER_BY_SQL = " ORDER BY agenciamodelos_Modelo.nome ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.br.com.seatecnologia.treinamento.model.Modelo"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.br.com.seatecnologia.treinamento.model.Modelo"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.br.com.seatecnologia.treinamento.model.Modelo"),
			true);
	public static long GROUPID_COLUMN_BITMASK = 1L;
	public static long NOME_COLUMN_BITMASK = 2L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static Modelo toModel(ModeloSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		Modelo model = new ModeloImpl();

		model.setModeloId(soapModel.getModeloId());
		model.setGroupId(soapModel.getGroupId());
		model.setCompanyId(soapModel.getCompanyId());
		model.setUserId(soapModel.getUserId());
		model.setUserName(soapModel.getUserName());
		model.setCreateDate(soapModel.getCreateDate());
		model.setModifiedDate(soapModel.getModifiedDate());
		model.setNome(soapModel.getNome());
		model.setIdade(soapModel.getIdade());
		model.setAltura(soapModel.getAltura());
		model.setPeso(soapModel.getPeso());
		model.setEtinia(soapModel.getEtinia());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<Modelo> toModels(ModeloSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<Modelo> models = new ArrayList<Modelo>(soapModels.length);

		for (ModeloSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.br.com.seatecnologia.treinamento.model.Modelo"));

	public ModeloModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _modeloId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setModeloId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _modeloId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return Modelo.class;
	}

	@Override
	public String getModelClassName() {
		return Modelo.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("modeloId", getModeloId());
		attributes.put("groupId", getGroupId());
		attributes.put("companyId", getCompanyId());
		attributes.put("userId", getUserId());
		attributes.put("userName", getUserName());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("nome", getNome());
		attributes.put("idade", getIdade());
		attributes.put("altura", getAltura());
		attributes.put("peso", getPeso());
		attributes.put("etinia", getEtinia());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long modeloId = (Long)attributes.get("modeloId");

		if (modeloId != null) {
			setModeloId(modeloId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		String userName = (String)attributes.get("userName");

		if (userName != null) {
			setUserName(userName);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		String nome = (String)attributes.get("nome");

		if (nome != null) {
			setNome(nome);
		}

		Integer idade = (Integer)attributes.get("idade");

		if (idade != null) {
			setIdade(idade);
		}

		Double altura = (Double)attributes.get("altura");

		if (altura != null) {
			setAltura(altura);
		}

		Double peso = (Double)attributes.get("peso");

		if (peso != null) {
			setPeso(peso);
		}

		Integer etinia = (Integer)attributes.get("etinia");

		if (etinia != null) {
			setEtinia(etinia);
		}
	}

	@JSON
	@Override
	public long getModeloId() {
		return _modeloId;
	}

	@Override
	public void setModeloId(long modeloId) {
		_modeloId = modeloId;
	}

	@JSON
	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_columnBitmask |= GROUPID_COLUMN_BITMASK;

		if (!_setOriginalGroupId) {
			_setOriginalGroupId = true;

			_originalGroupId = _groupId;
		}

		_groupId = groupId;
	}

	public long getOriginalGroupId() {
		return _originalGroupId;
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_companyId = companyId;
	}

	@JSON
	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	@Override
	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	@JSON
	@Override
	public String getUserName() {
		if (_userName == null) {
			return StringPool.BLANK;
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		_userName = userName;
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	@JSON
	@Override
	public String getNome() {
		if (_nome == null) {
			return StringPool.BLANK;
		}
		else {
			return _nome;
		}
	}

	@Override
	public void setNome(String nome) {
		_columnBitmask = -1L;

		if (_originalNome == null) {
			_originalNome = _nome;
		}

		_nome = nome;
	}

	public String getOriginalNome() {
		return GetterUtil.getString(_originalNome);
	}

	@JSON
	@Override
	public int getIdade() {
		return _idade;
	}

	@Override
	public void setIdade(int idade) {
		_idade = idade;
	}

	@JSON
	@Override
	public double getAltura() {
		return _altura;
	}

	@Override
	public void setAltura(double altura) {
		_altura = altura;
	}

	@JSON
	@Override
	public double getPeso() {
		return _peso;
	}

	@Override
	public void setPeso(double peso) {
		_peso = peso;
	}

	@JSON
	@Override
	public int getEtinia() {
		return _etinia;
	}

	@Override
	public void setEtinia(int etinia) {
		_etinia = etinia;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			Modelo.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public Modelo toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (Modelo)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		ModeloImpl modeloImpl = new ModeloImpl();

		modeloImpl.setModeloId(getModeloId());
		modeloImpl.setGroupId(getGroupId());
		modeloImpl.setCompanyId(getCompanyId());
		modeloImpl.setUserId(getUserId());
		modeloImpl.setUserName(getUserName());
		modeloImpl.setCreateDate(getCreateDate());
		modeloImpl.setModifiedDate(getModifiedDate());
		modeloImpl.setNome(getNome());
		modeloImpl.setIdade(getIdade());
		modeloImpl.setAltura(getAltura());
		modeloImpl.setPeso(getPeso());
		modeloImpl.setEtinia(getEtinia());

		modeloImpl.resetOriginalValues();

		return modeloImpl;
	}

	@Override
	public int compareTo(Modelo modelo) {
		int value = 0;

		value = getNome().compareTo(modelo.getNome());

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof Modelo)) {
			return false;
		}

		Modelo modelo = (Modelo)obj;

		long primaryKey = modelo.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		ModeloModelImpl modeloModelImpl = this;

		modeloModelImpl._originalGroupId = modeloModelImpl._groupId;

		modeloModelImpl._setOriginalGroupId = false;

		modeloModelImpl._originalNome = modeloModelImpl._nome;

		modeloModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<Modelo> toCacheModel() {
		ModeloCacheModel modeloCacheModel = new ModeloCacheModel();

		modeloCacheModel.modeloId = getModeloId();

		modeloCacheModel.groupId = getGroupId();

		modeloCacheModel.companyId = getCompanyId();

		modeloCacheModel.userId = getUserId();

		modeloCacheModel.userName = getUserName();

		String userName = modeloCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			modeloCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			modeloCacheModel.createDate = createDate.getTime();
		}
		else {
			modeloCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			modeloCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			modeloCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		modeloCacheModel.nome = getNome();

		String nome = modeloCacheModel.nome;

		if ((nome != null) && (nome.length() == 0)) {
			modeloCacheModel.nome = null;
		}

		modeloCacheModel.idade = getIdade();

		modeloCacheModel.altura = getAltura();

		modeloCacheModel.peso = getPeso();

		modeloCacheModel.etinia = getEtinia();

		return modeloCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(25);

		sb.append("{modeloId=");
		sb.append(getModeloId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", userName=");
		sb.append(getUserName());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", nome=");
		sb.append(getNome());
		sb.append(", idade=");
		sb.append(getIdade());
		sb.append(", altura=");
		sb.append(getAltura());
		sb.append(", peso=");
		sb.append(getPeso());
		sb.append(", etinia=");
		sb.append(getEtinia());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(40);

		sb.append("<model><model-name>");
		sb.append("br.com.seatecnologia.treinamento.model.Modelo");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>modeloId</column-name><column-value><![CDATA[");
		sb.append(getModeloId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userName</column-name><column-value><![CDATA[");
		sb.append(getUserName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>nome</column-name><column-value><![CDATA[");
		sb.append(getNome());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>idade</column-name><column-value><![CDATA[");
		sb.append(getIdade());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>altura</column-name><column-value><![CDATA[");
		sb.append(getAltura());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>peso</column-name><column-value><![CDATA[");
		sb.append(getPeso());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>etinia</column-name><column-value><![CDATA[");
		sb.append(getEtinia());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = Modelo.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] { Modelo.class };
	private long _modeloId;
	private long _groupId;
	private long _originalGroupId;
	private boolean _setOriginalGroupId;
	private long _companyId;
	private long _userId;
	private String _userUuid;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private String _nome;
	private String _originalNome;
	private int _idade;
	private double _altura;
	private double _peso;
	private int _etinia;
	private long _columnBitmask;
	private Modelo _escapedModel;
}